%!PS-Adobe-2.0 EPSF-2.0
%%Title: KIBAN26-.eps
%%Creator: gnuplot 6.0 patchlevel 2
%%CreationDate: Sat Aug 23 20:49:15 2025
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 266 201
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 266 50 lineto 266 201 lineto 50 201 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (KIBAN26-.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 6.0 patchlevel 2)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Aug 23 20:49:15 2025)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PL PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 4320.00 3024.00 BoxColFill} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB} {ColorSpace (CMY) eq
  {CMY2RGB} if} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 1 ] def
/RedA [1 0 ] def
/GreenA [0 0 ] def
/BlueA [0 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
686 588 M
31 0 V
3350 0 R
-31 0 V
686 617 M
31 0 V
3350 0 R
-31 0 V
686 641 M
31 0 V
3350 0 R
-31 0 V
686 662 M
31 0 V
3350 0 R
-31 0 V
686 681 M
31 0 V
3350 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
686 698 M
84 0 V
1659 0 R
1638 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 698 M
63 0 V
3318 0 R
-63 0 V
stroke
602 698 M
[ [(Times) 140.0 0.0 true true 0 (10)]
[(Times) 112.0 70.0 true true 0 (-6)]
] -60.7 MRshow
/Times findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
686 807 M
31 0 V
3350 0 R
-31 0 V
686 871 M
31 0 V
3350 0 R
-31 0 V
686 917 M
31 0 V
3350 0 R
-31 0 V
686 952 M
31 0 V
3350 0 R
-31 0 V
686 981 M
31 0 V
3350 0 R
-31 0 V
686 1005 M
31 0 V
3350 0 R
-31 0 V
686 1027 M
31 0 V
3350 0 R
-31 0 V
686 1045 M
31 0 V
3350 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
686 1062 M
3381 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 1062 M
63 0 V
3318 0 R
-63 0 V
stroke
602 1062 M
[ [(Times) 140.0 0.0 true true 0 (10)]
[(Times) 112.0 70.0 true true 0 (-5)]
] -60.7 MRshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 1172 M
31 0 V
3350 0 R
-31 0 V
686 1236 M
31 0 V
3350 0 R
-31 0 V
686 1281 M
31 0 V
3350 0 R
-31 0 V
686 1316 M
31 0 V
3350 0 R
-31 0 V
686 1345 M
31 0 V
3350 0 R
-31 0 V
686 1370 M
31 0 V
3350 0 R
-31 0 V
686 1391 M
31 0 V
3350 0 R
-31 0 V
686 1409 M
31 0 V
3350 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
686 1426 M
3381 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 1426 M
63 0 V
3318 0 R
-63 0 V
stroke
602 1426 M
[ [(Times) 140.0 0.0 true true 0 (10)]
[(Times) 112.0 70.0 true true 0 (-4)]
] -60.7 MRshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 1536 M
31 0 V
3350 0 R
-31 0 V
686 1600 M
31 0 V
3350 0 R
-31 0 V
686 1645 M
31 0 V
3350 0 R
-31 0 V
686 1681 M
31 0 V
3350 0 R
-31 0 V
686 1710 M
31 0 V
3350 0 R
-31 0 V
686 1734 M
31 0 V
3350 0 R
-31 0 V
686 1755 M
31 0 V
3350 0 R
-31 0 V
686 1774 M
31 0 V
3350 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
686 1790 M
3381 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 1790 M
63 0 V
3318 0 R
-63 0 V
stroke
602 1790 M
[ [(Times) 140.0 0.0 true true 0 (10)]
[(Times) 112.0 70.0 true true 0 (-3)]
] -60.7 MRshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 1900 M
31 0 V
3350 0 R
-31 0 V
686 1964 M
31 0 V
3350 0 R
-31 0 V
686 2010 M
31 0 V
3350 0 R
-31 0 V
686 2045 M
31 0 V
3350 0 R
-31 0 V
686 2074 M
31 0 V
3350 0 R
-31 0 V
686 2098 M
31 0 V
3350 0 R
-31 0 V
686 2119 M
31 0 V
3350 0 R
-31 0 V
686 2138 M
31 0 V
3350 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
686 2155 M
3381 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 2155 M
63 0 V
3318 0 R
-63 0 V
stroke
602 2155 M
[ [(Times) 140.0 0.0 true true 0 (10)]
[(Times) 112.0 70.0 true true 0 (-2)]
] -60.7 MRshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 2264 M
31 0 V
3350 0 R
-31 0 V
686 2328 M
31 0 V
3350 0 R
-31 0 V
686 2374 M
31 0 V
3350 0 R
-31 0 V
686 2409 M
31 0 V
3350 0 R
-31 0 V
686 2438 M
31 0 V
3350 0 R
-31 0 V
686 2462 M
31 0 V
3350 0 R
-31 0 V
686 2483 M
31 0 V
3350 0 R
-31 0 V
686 2502 M
31 0 V
3350 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
686 2519 M
3381 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 2519 M
63 0 V
3318 0 R
-63 0 V
stroke
602 2519 M
[ [(Times) 140.0 0.0 true true 0 (10)]
[(Times) 112.0 70.0 true true 0 (-1)]
] -60.7 MRshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
686 2628 M
31 0 V
3350 0 R
-31 0 V
686 2693 M
31 0 V
3350 0 R
-31 0 V
686 2738 M
31 0 V
3350 0 R
-31 0 V
686 2773 M
31 0 V
3350 0 R
-31 0 V
686 2802 M
31 0 V
3350 0 R
-31 0 V
686 2827 M
31 0 V
3350 0 R
-31 0 V
686 2848 M
31 0 V
3350 0 R
-31 0 V
686 2866 M
31 0 V
3350 0 R
-31 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
686 2883 M
3381 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 2883 M
63 0 V
3318 0 R
-63 0 V
stroke
602 2883 M
[ [(Times) 140.0 0.0 true true 0 (10)]
[(Times) 112.0 70.0 true true 0 (0)]
] -60.7 MRshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
0.500 UL
LTa
LCa setrgbcolor
686 588 M
0 2295 V
stroke
1.000 UL
LTb
LCb setrgbcolor
686 588 M
0 63 V
0 2232 R
0 -63 V
stroke
686 448 M
[ [(Times) 140.0 0.0 true true 0 (0.00)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
714 588 M
0 31 V
0 2264 R
0 -31 V
742 588 M
0 31 V
0 2264 R
0 -31 V
771 588 M
0 31 V
0 2264 R
0 -31 V
799 588 M
0 31 V
0 2264 R
0 -31 V
827 588 M
0 31 V
0 2264 R
0 -31 V
855 588 M
0 31 V
0 2264 R
0 -31 V
883 588 M
0 31 V
0 2264 R
0 -31 V
911 588 M
0 31 V
0 2264 R
0 -31 V
940 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
968 588 M
0 63 V
0 140 R
0 2092 V
stroke
1.000 UL
LTb
LCb setrgbcolor
968 588 M
0 63 V
0 2232 R
0 -63 V
stroke
968 448 M
[ [(Times) 140.0 0.0 true true 0 (0.01)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
996 588 M
0 31 V
0 2264 R
0 -31 V
1024 588 M
0 31 V
0 2264 R
0 -31 V
1052 588 M
0 31 V
0 2264 R
0 -31 V
1080 588 M
0 31 V
0 2264 R
0 -31 V
1109 588 M
0 31 V
0 2264 R
0 -31 V
1137 588 M
0 31 V
0 2264 R
0 -31 V
1165 588 M
0 31 V
0 2264 R
0 -31 V
1193 588 M
0 31 V
0 2264 R
0 -31 V
1221 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1250 588 M
0 63 V
0 140 R
0 2092 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1250 588 M
0 63 V
0 2232 R
0 -63 V
stroke
1250 448 M
[ [(Times) 140.0 0.0 true true 0 (0.02)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1278 588 M
0 31 V
0 2264 R
0 -31 V
1306 588 M
0 31 V
0 2264 R
0 -31 V
1334 588 M
0 31 V
0 2264 R
0 -31 V
1362 588 M
0 31 V
0 2264 R
0 -31 V
1390 588 M
0 31 V
0 2264 R
0 -31 V
1419 588 M
0 31 V
0 2264 R
0 -31 V
1447 588 M
0 31 V
0 2264 R
0 -31 V
1475 588 M
0 31 V
0 2264 R
0 -31 V
1503 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1531 588 M
0 63 V
0 140 R
0 2092 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1531 588 M
0 63 V
0 2232 R
0 -63 V
stroke
1531 448 M
[ [(Times) 140.0 0.0 true true 0 (0.03)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1559 588 M
0 31 V
0 2264 R
0 -31 V
1588 588 M
0 31 V
0 2264 R
0 -31 V
1616 588 M
0 31 V
0 2264 R
0 -31 V
1644 588 M
0 31 V
0 2264 R
0 -31 V
1672 588 M
0 31 V
0 2264 R
0 -31 V
1700 588 M
0 31 V
0 2264 R
0 -31 V
1728 588 M
0 31 V
0 2264 R
0 -31 V
1757 588 M
0 31 V
0 2264 R
0 -31 V
1785 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
1813 588 M
0 63 V
0 140 R
0 2092 V
stroke
1.000 UL
LTb
LCb setrgbcolor
1813 588 M
0 63 V
0 2232 R
0 -63 V
stroke
1813 448 M
[ [(Times) 140.0 0.0 true true 0 (0.04)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1841 588 M
0 31 V
0 2264 R
0 -31 V
1869 588 M
0 31 V
0 2264 R
0 -31 V
1898 588 M
0 31 V
0 2264 R
0 -31 V
1926 588 M
0 31 V
0 2264 R
0 -31 V
1954 588 M
0 31 V
0 2264 R
0 -31 V
1982 588 M
0 31 V
0 2264 R
0 -31 V
2010 588 M
0 31 V
0 2264 R
0 -31 V
2038 588 M
0 31 V
0 2264 R
0 -31 V
2067 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
2095 588 M
0 63 V
0 140 R
0 2092 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2095 588 M
0 63 V
0 2232 R
0 -63 V
stroke
2095 448 M
[ [(Times) 140.0 0.0 true true 0 (0.05)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2123 588 M
0 31 V
0 2264 R
0 -31 V
2151 588 M
0 31 V
0 2264 R
0 -31 V
2179 588 M
0 31 V
0 2264 R
0 -31 V
2207 588 M
0 31 V
0 2264 R
0 -31 V
2236 588 M
0 31 V
0 2264 R
0 -31 V
2264 588 M
0 31 V
0 2264 R
0 -31 V
2292 588 M
0 31 V
0 2264 R
0 -31 V
2320 588 M
0 31 V
0 2264 R
0 -31 V
2348 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
2377 588 M
0 63 V
0 140 R
0 2092 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2377 588 M
0 63 V
0 2232 R
0 -63 V
stroke
2377 448 M
[ [(Times) 140.0 0.0 true true 0 (0.06)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2405 588 M
0 31 V
0 2264 R
0 -31 V
2433 588 M
0 31 V
0 2264 R
0 -31 V
2461 588 M
0 31 V
0 2264 R
0 -31 V
2489 588 M
0 31 V
0 2264 R
0 -31 V
2517 588 M
0 31 V
0 2264 R
0 -31 V
2546 588 M
0 31 V
0 2264 R
0 -31 V
2574 588 M
0 31 V
0 2264 R
0 -31 V
2602 588 M
0 31 V
0 2264 R
0 -31 V
2630 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
2658 588 M
0 2295 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2658 588 M
0 63 V
0 2232 R
0 -63 V
stroke
2658 448 M
[ [(Times) 140.0 0.0 true true 0 (0.07)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2686 588 M
0 31 V
0 2264 R
0 -31 V
2715 588 M
0 31 V
0 2264 R
0 -31 V
2743 588 M
0 31 V
0 2264 R
0 -31 V
2771 588 M
0 31 V
0 2264 R
0 -31 V
2799 588 M
0 31 V
0 2264 R
0 -31 V
2827 588 M
0 31 V
0 2264 R
0 -31 V
2855 588 M
0 31 V
0 2264 R
0 -31 V
2884 588 M
0 31 V
0 2264 R
0 -31 V
2912 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
2940 588 M
0 2295 V
stroke
1.000 UL
LTb
LCb setrgbcolor
2940 588 M
0 63 V
0 2232 R
0 -63 V
stroke
2940 448 M
[ [(Times) 140.0 0.0 true true 0 (0.08)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
2968 588 M
0 31 V
0 2264 R
0 -31 V
2996 588 M
0 31 V
0 2264 R
0 -31 V
3025 588 M
0 31 V
0 2264 R
0 -31 V
3053 588 M
0 31 V
0 2264 R
0 -31 V
3081 588 M
0 31 V
0 2264 R
0 -31 V
3109 588 M
0 31 V
0 2264 R
0 -31 V
3137 588 M
0 31 V
0 2264 R
0 -31 V
3165 588 M
0 31 V
0 2264 R
0 -31 V
3194 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
3222 588 M
0 2295 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3222 588 M
0 63 V
0 2232 R
0 -63 V
stroke
3222 448 M
[ [(Times) 140.0 0.0 true true 0 (0.09)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3250 588 M
0 31 V
0 2264 R
0 -31 V
3278 588 M
0 31 V
0 2264 R
0 -31 V
3306 588 M
0 31 V
0 2264 R
0 -31 V
3334 588 M
0 31 V
0 2264 R
0 -31 V
3363 588 M
0 31 V
0 2264 R
0 -31 V
3391 588 M
0 31 V
0 2264 R
0 -31 V
3419 588 M
0 31 V
0 2264 R
0 -31 V
3447 588 M
0 31 V
0 2264 R
0 -31 V
3475 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
3503 588 M
0 2295 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3503 588 M
0 63 V
0 2232 R
0 -63 V
stroke
3503 448 M
[ [(Times) 140.0 0.0 true true 0 (0.10)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3532 588 M
0 31 V
0 2264 R
0 -31 V
3560 588 M
0 31 V
0 2264 R
0 -31 V
3588 588 M
0 31 V
0 2264 R
0 -31 V
3616 588 M
0 31 V
0 2264 R
0 -31 V
3644 588 M
0 31 V
0 2264 R
0 -31 V
3673 588 M
0 31 V
0 2264 R
0 -31 V
3701 588 M
0 31 V
0 2264 R
0 -31 V
3729 588 M
0 31 V
0 2264 R
0 -31 V
3757 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
3785 588 M
0 2295 V
stroke
1.000 UL
LTb
LCb setrgbcolor
3785 588 M
0 63 V
0 2232 R
0 -63 V
stroke
3785 448 M
[ [(Times) 140.0 0.0 true true 0 (0.11)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3813 588 M
0 31 V
0 2264 R
0 -31 V
3842 588 M
0 31 V
0 2264 R
0 -31 V
3870 588 M
0 31 V
0 2264 R
0 -31 V
3898 588 M
0 31 V
0 2264 R
0 -31 V
3926 588 M
0 31 V
0 2264 R
0 -31 V
3954 588 M
0 31 V
0 2264 R
0 -31 V
3982 588 M
0 31 V
0 2264 R
0 -31 V
4011 588 M
0 31 V
0 2264 R
0 -31 V
4039 588 M
0 31 V
0 2264 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
4067 588 M
0 2295 V
stroke
1.000 UL
LTb
LCb setrgbcolor
4067 588 M
0 63 V
0 2232 R
0 -63 V
stroke
4067 448 M
[ [(Times) 140.0 0.0 true true 0 (0.12)]
] -46.7 MCshow
/Times findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 2883 N
686 588 L
3381 0 V
0 2295 V
-3381 0 V
Z stroke
1.000 UP
LCb setrgbcolor
1193 1426 M
currentpoint gsave translate 85 rotate 0 0 moveto
[ [(Times) 140.0 0.0 true true 0 (R=3/4, n=98,304, d<=10)]
] -46.7 MLshow
grestore
/Times findfont 140 scalefont setfont
LCb setrgbcolor
1785 1426 M
currentpoint gsave translate 85 rotate 0 0 moveto
[ [(Times) 140.0 0.0 true true 0 (R=3/5, n=81,920, d<=9)]
] -46.7 MLshow
grestore
/Times findfont 140 scalefont setfont
LCb setrgbcolor
2334 1316 M
currentpoint gsave translate 85 rotate 0 0 moveto
[ [(Times) 140.0 0.0 true true 0 (R=1/2, n=806,400, d<=14)]
] -46.7 MLshow
grestore
/Times findfont 140 scalefont setfont
LCb setrgbcolor
3222 1316 M
currentpoint gsave translate 85 rotate 0 0 moveto
[ [(Times) 140.0 0.0 true true 0 (R=1/3, n=312,000, d<=14)]
] -46.7 MLshow
grestore
/Times findfont 140 scalefont setfont
2.000 UL
LTb
LCb setrgbcolor
1567 2884 M
0 -364 V
stroke
LTb
LCb setrgbcolor
2783 2884 M
0 -364 V
stroke
LTb
LCb setrgbcolor
2264 2884 M
0 -364 V
stroke
LTb
LCb setrgbcolor
3742 2884 M
0 -364 V
stroke
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
3.000 UL
LTb
.9 g 1531 2883 M
-42 0 V
-42 -18 V
-21 -188 V
-22 -396 V
-21 -874 V
% End plot #1
% Begin plot #2
stroke
LTb
.6 g 2165 2883 M
-21 0 V
-21 0 V
-21 0 V
-21 -10 V
-21 -24 V
-22 -123 V
-21 -197 V
-21 -349 V
-21 -449 V
-21 -536 V
% End plot #2
% Begin plot #3
stroke
LTb
.3 g 2541 2883 M
-12 -61 V
-9 -80 V
-8 -211 V
-4 -161 V
-5 -182 V
-4 -246 V
-4 -300 V
-4 -312 V
-9 -533 V
% End plot #3
% Begin plot #4
stroke
LTb
.1 g 3433 2857 M
-21 -89 V
-21 -215 V
-13 -501 V
-8 -185 V
-9 -340 V
-8 -238 V
-9 -128 V
-4 -35 V
-4 -117 V
% End plot #4
% Begin plot #5
stroke
2.000 UL
LTb
0.00 0.00 0.00 C
LCb setrgbcolor
770 721 M
[ [(Times) 140.0 0.0 true true 0 (Hashing Bound)]
] -46.7 MLshow
/Times findfont 140 scalefont setfont
2.000 UL
LTb
0.00 0.00 0.00 C
1946 721 M
399 0 V
% End plot #5
stroke
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
686 2883 N
686 588 L
3381 0 V
0 2295 V
-3381 0 V
Z stroke
LCb setrgbcolor
133 1735 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Times) 140.0 0.0 true true 0 (Frame Error Rate)]
] -46.7 MCshow
grestore
/Times findfont 140 scalefont setfont
LTb
LCb setrgbcolor
2376 238 M
[ [(Times) 140.0 0.0 true true 0 (Physical Error Rate p)]
[(Times) 112.0 -42.0 true true 0 (D)]
] -32.7 MCshow
/Times findfont 140 scalefont setfont
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times
